{
	"name": "DF_PRODUCTS_CLEANED_TO_REPORT",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DS_SQL_PARAMETERS",
						"type": "DatasetReference"
					},
					"name": "productsCleaned"
				},
				{
					"dataset": {
						"referenceName": "DS_SQL_PARAMETERS",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DS_SQL_PARAMETERS",
						"type": "DatasetReference"
					},
					"name": "factTable1"
				}
			],
			"transformations": [
				{
					"name": "groupByCategory"
				},
				{
					"name": "filterNullPrices"
				},
				{
					"name": "sortAvgPrices"
				}
			],
			"scriptLines": [
				"source(output(",
				"          departmentCode as string,",
				"          categoryCode as string,",
				"          categoryName as string,",
				"          searchCategoryCode as string,",
				"          seriesCode as string,",
				"          seriesName as string,",
				"          brandCode as string,",
				"          brandUrlCode as string,",
				"          brandName as string,",
				"          seriesStatus as string,",
				"          minDaysToShip as double,",
				"          maxDaysToShip as double,",
				"          minPrice as double,",
				"          maxPrice as double,",
				"          minPricePerPiece as double,",
				"          maxPricePerPiece as double",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> productsCleaned",
				"source(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> source1",
				"productsCleaned aggregate(groupBy(categoryName),",
				"     avgMinPrice = round(avg(minPrice),2),",
				"          avgMaxPrice = round(avg(maxPrice),2)) ~> groupByCategory",
				"groupByCategory filter(!isNull(avgMinPrice) && !isNull(avgMaxPrice) ) ~> filterNullPrices",
				"filterNullPrices sort(asc(avgMinPrice, true),",
				"     asc(avgMaxPrice, true)) ~> sortAvgPrices",
				"sortAvgPrices sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> factTable1"
			]
		}
	}
}