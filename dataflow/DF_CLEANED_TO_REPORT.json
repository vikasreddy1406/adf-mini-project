{
	"name": "DF_CLEANED_TO_REPORT",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DS_SQL_PARAMETERS",
						"type": "DatasetReference"
					},
					"name": "projectsSqlCleaned"
				},
				{
					"dataset": {
						"referenceName": "DS_SQL_PARAMETERS",
						"type": "DatasetReference"
					},
					"name": "tasksSqlCleaned"
				},
				{
					"dataset": {
						"referenceName": "DS_SQL_PARAMETERS",
						"type": "DatasetReference"
					},
					"name": "userSqlCleaned"
				}
			],
			"sinks": [
				{
					"name": "reportTable"
				}
			],
			"transformations": [
				{
					"name": "projectsAndTasks"
				},
				{
					"name": "totalTasksPerProject"
				},
				{
					"name": "tasksCompletion",
					"description": "Creating completionPercentage'"
				}
			],
			"scriptLines": [
				"source(output(",
				"          id as string,",
				"          projectName as string,",
				"          projectDescription as string,",
				"          projectUserId as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> projectsSqlCleaned",
				"source(output(",
				"          id as string,",
				"          taskName as string,",
				"          taskDescription as string,",
				"          taskStatus as string,",
				"          taskUserId as string,",
				"          projectId as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> tasksSqlCleaned",
				"source(output(",
				"          id as string,",
				"          fullName as string,",
				"          email as string,",
				"          password as string,",
				"          role as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> userSqlCleaned",
				"projectsSqlCleaned, tasksSqlCleaned join(projectsSqlCleaned@id == projectId,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> projectsAndTasks",
				"projectsAndTasks aggregate(groupBy(projectName,",
				"          projectUserId),",
				"     totalTasks = count(tasksSqlCleaned@id),",
				"          doneTasks = countIf(taskStatus=='Done')) ~> totalTasksPerProject",
				"totalTasksPerProject derive(completionPercentage = round((doneTasks*100)/totalTasks,2)) ~> tasksCompletion",
				"tasksCompletion sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> reportTable"
			]
		}
	}
}